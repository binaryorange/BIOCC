[gd_scene load_steps=7 format=2]

[ext_resource path="res://ECC_TPController/ECC_TPController.gd" type="Script" id=1]
[ext_resource path="res://ECC_TPController/CheckInputs.gd" type="Script" id=2]

[sub_resource type="SphereMesh" id=1]
radial_segments = 8
rings = 8

[sub_resource type="SphereShape" id=2]
radius = 3.0

[sub_resource type="SphereMesh" id=3]

[sub_resource type="SpatialMaterial" id=4]
flags_transparent = true
albedo_color = Color( 0, 0.486275, 1, 0.392157 )
emission_enabled = true
emission = Color( 0, 0.0862745, 1, 1 )
emission_energy = 1.0
emission_operator = 0
emission_on_uv2 = false

[node name="ECC_ThirdPerson" type="Spatial" groups=[
"noclip",
]]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.25, 2.5, 0.25 )
script = ExtResource( 1 )
ViewCamera = NodePath("X Gimbal/ViewCamera")
ClipCamera = NodePath("X Gimbal/ClipCameraTarget/ClippedCamera")

[node name="CheckInputs" type="Node" parent="." groups=[
"noclip",
]]
script = ExtResource( 2 )

[node name="X Gimbal" type="Spatial" parent="." groups=[
"noclip",
]]

[node name="HelperMesh" type="MeshInstance" parent="X Gimbal" groups=[
"noclip",
]]
transform = Transform( 0.25, 0, 0, 0, 0.25, 0, 0, 0, 0.25, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = null
__meta__ = {
"_editor_description_": "This HelperMesh represents the gimbal setup's CENTER, and thus its ZERO POSITION.

Use this to to set where you want your camera to rotate  arond the player - DO NOT MOVE THE CAMERAS THEMSELVES!!!
"
}

[node name="ViewCamera" type="Camera" parent="X Gimbal" groups=[
"noclip",
]]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 3 )
current = true
near = 0.01
far = 500.0
__meta__ = {
"_editor_description_": "This is the camera that actually sees the player.

We feed it the positioning information from the ClippedCamera node.

Make sure it matches the rotational "
}

[node name="CanClipDetector" type="Area" parent="X Gimbal/ViewCamera" groups=[
"noclip",
]]
transform = Transform( 1, 0, 0, 0, 0.999999, 0, 0, 0, 0.999999, 0, 0, 1.5 )
input_ray_pickable = false

[node name="CollisionShape" type="CollisionShape" parent="X Gimbal/ViewCamera/CanClipDetector" groups=[
"noclip",
]]
shape = SubResource( 2 )

[node name="DebugHelper" type="MeshInstance" parent="X Gimbal/ViewCamera/CanClipDetector/CollisionShape"]
transform = Transform( 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0 )
mesh = SubResource( 3 )
material/0 = SubResource( 4 )

[node name="ClipCameraTarget" type="Spatial" parent="X Gimbal" groups=[
"noclip",
]]

[node name="ClippedCamera" type="ClippedCamera" parent="X Gimbal/ClipCameraTarget" groups=[
"noclip",
]]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 6 )
doppler_tracking = 2
fov = 60.0
margin = 0.1

[node name="ZoomMarkers" type="Spatial" parent="X Gimbal/ClipCameraTarget"]

[node name="Zoom1" type="Position3D" parent="X Gimbal/ClipCameraTarget/ZoomMarkers" groups=[
"noclip",
]]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 4 )

[node name="Zoom2" type="Position3D" parent="X Gimbal/ClipCameraTarget/ZoomMarkers" groups=[
"noclip",
]]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 8 )

[node name="Zoom3" type="Position3D" parent="X Gimbal/ClipCameraTarget/ZoomMarkers" groups=[
"noclip",
]]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 12 )

[node name="ZoomTimer" type="Timer" parent="." groups=[
"noclip",
]]
wait_time = 0.1
__meta__ = {
"_editor_description_": "We use this timer to prevent the player from \"blasting\" through different zoom levels."
}

[node name="ConfinedSpaceCheck" type="RayCast" parent="." groups=[
"noclip",
]]
enabled = true
cast_to = Vector3( 0, 15, 0 )
[connection signal="body_entered" from="X Gimbal/ViewCamera/CanClipDetector" to="." method="_on_CanClipDetector_body_entered"]
[connection signal="body_exited" from="X Gimbal/ViewCamera/CanClipDetector" to="." method="_on_CanClipDetector_body_exited"]
[connection signal="timeout" from="ZoomTimer" to="." method="_on_ZoomTimer_timeout"]
